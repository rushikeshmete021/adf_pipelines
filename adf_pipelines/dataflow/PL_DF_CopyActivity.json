{
	"name": "PL_DF_CopyActivity",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DF_SorceFile",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DF_TargetFile",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Name as string,",
				"          { id} as integer,",
				"          { Department} as string,",
				"          { Salary} as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(FullName = concat(Name,'',{ Department} ),",
				"          { Salary} = { Salary}+500) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          FullName,",
				"          { id},",
				"          { Department},",
				"          Salary = { Salary}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Invoice_ID as string,",
				"          Branch as string,",
				"          City as string,",
				"          {Customer type} as string,",
				"          Gender as string,",
				"          Product_line as string,",
				"          Unit_price as string,",
				"          Quantity as string,",
				"          {Tax 5%} as string,",
				"          Total as string,",
				"          Date as string,",
				"          Time as string,",
				"          Payment as string,",
				"          cogs as string,",
				"          gross_margin_percentage as string,",
				"          gross_income as string,",
				"          Rating as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}